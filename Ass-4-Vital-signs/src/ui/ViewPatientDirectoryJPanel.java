/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package ui;

import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import model.PatientDirectory;
import model.Patient;
import model.VitalSignHistory;
import model.VitalSigns;

/**
 *
 * @author apurvazawar
 */
public class ViewPatientDirectoryJPanel extends javax.swing.JPanel {

    /**
     * Creates new form ViewPatientDirectoryJPanel
     */
    int row, column;
    DefaultTableModel defaultTableModel, defaultTableModel1,defaultTableModel2;
    VitalSignHistory vitalSignHistory;
    VitalSigns vitalSigns;
    PatientDirectory patientDirectory;
    Patient patient;
    
    public ViewPatientDirectoryJPanel(VitalSignHistory vitalSignHistory, PatientDirectory patientDirectory) {
        initComponents();
        this.vitalSignHistory = vitalSignHistory;
        this.patientDirectory = patientDirectory;
        populate();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jSearchPanel = new javax.swing.JPanel();
        comboBoxSelectedCommunity = new javax.swing.JComboBox<>();
        lblCommunity = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        txtPatientMinAge = new javax.swing.JTextField();
        lblPatientAge1 = new javax.swing.JLabel();
        lblMinAge = new javax.swing.JLabel();
        txtPatientMaxAge = new javax.swing.JTextField();
        lblMaxAge = new javax.swing.JLabel();
        btnSearchResult = new javax.swing.JButton();
        lblEncounterHistory = new javax.swing.JLabel();
        txtEncounterHistory = new javax.swing.JTextField();
        btnEncounterHistory = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTableSearchOutput = new javax.swing.JTable();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTablePatientDirectoryData = new javax.swing.JTable();

        jPanel1.setBackground(new java.awt.Color(0, 102, 153));

        jLabel2.setFont(new java.awt.Font("Lucida Grande", 1, 24)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Patient Directory");

        jSearchPanel.setBackground(new java.awt.Color(0, 102, 153));

        comboBoxSelectedCommunity.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Allston", "Back Bay", "Mission Hill", "Roxbury" }));
        comboBoxSelectedCommunity.setSelectedIndex(-1);

        lblCommunity.setFont(new java.awt.Font("Lucida Grande", 2, 14)); // NOI18N
        lblCommunity.setForeground(new java.awt.Color(255, 255, 255));
        lblCommunity.setText("Select Community");

        jLabel3.setFont(new java.awt.Font("Lucida Grande", 1, 18)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("Select Search Criteria");

        txtPatientMinAge.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtPatientMinAgeActionPerformed(evt);
            }
        });

        lblPatientAge1.setFont(new java.awt.Font("Lucida Grande", 2, 14)); // NOI18N
        lblPatientAge1.setForeground(new java.awt.Color(255, 255, 255));
        lblPatientAge1.setText("Enter Patient Age");

        lblMinAge.setForeground(new java.awt.Color(255, 255, 255));
        lblMinAge.setText("Min Age");

        txtPatientMaxAge.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtPatientMaxAgeActionPerformed(evt);
            }
        });

        lblMaxAge.setForeground(new java.awt.Color(255, 255, 255));
        lblMaxAge.setText("Max Age");

        btnSearchResult.setText("Search");
        btnSearchResult.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearchResultActionPerformed(evt);
            }
        });

        lblEncounterHistory.setFont(new java.awt.Font("Lucida Grande", 2, 14)); // NOI18N
        lblEncounterHistory.setForeground(new java.awt.Color(255, 255, 255));
        lblEncounterHistory.setText("Encounter History");

        txtEncounterHistory.setText("Patient ID");
        txtEncounterHistory.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtEncounterHistoryActionPerformed(evt);
            }
        });

        btnEncounterHistory.setText("View");
        btnEncounterHistory.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEncounterHistoryActionPerformed(evt);
            }
        });

        jTableSearchOutput.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Name", "Age", "Gender", "Contact", "Residence", "Community", "City", "Patient Id", "Body Temperature", "Systolic BP", "Diastolic BP", "Heart Rate", "Body Weight", "Date"
            }
        ));
        jTableSearchOutput.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTableSearchOutputMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(jTableSearchOutput);

        javax.swing.GroupLayout jSearchPanelLayout = new javax.swing.GroupLayout(jSearchPanel);
        jSearchPanel.setLayout(jSearchPanelLayout);
        jSearchPanelLayout.setHorizontalGroup(
            jSearchPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jSearchPanelLayout.createSequentialGroup()
                .addGap(60, 60, 60)
                .addGroup(jSearchPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 1138, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jSearchPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addGroup(jSearchPanelLayout.createSequentialGroup()
                            .addComponent(lblPatientAge1)
                            .addGap(39, 39, 39)
                            .addGroup(jSearchPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(txtEncounterHistory, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(txtPatientMinAge, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(lblMinAge))
                            .addGap(18, 18, 18)
                            .addGroup(jSearchPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addGroup(jSearchPanelLayout.createSequentialGroup()
                                    .addComponent(lblMaxAge)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(btnSearchResult))
                                .addGroup(jSearchPanelLayout.createSequentialGroup()
                                    .addComponent(txtPatientMaxAge, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(28, 28, 28)
                                    .addComponent(btnEncounterHistory, javax.swing.GroupLayout.DEFAULT_SIZE, 85, Short.MAX_VALUE))))
                        .addComponent(lblEncounterHistory, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 272, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jSearchPanelLayout.createSequentialGroup()
                            .addComponent(lblCommunity, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(18, 18, 18)
                            .addComponent(comboBoxSelectedCommunity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(40, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jSearchPanelLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel3)
                .addGap(508, 508, 508))
        );
        jSearchPanelLayout.setVerticalGroup(
            jSearchPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jSearchPanelLayout.createSequentialGroup()
                .addGroup(jSearchPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jSearchPanelLayout.createSequentialGroup()
                        .addGap(91, 91, 91)
                        .addGroup(jSearchPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblCommunity)
                            .addComponent(comboBoxSelectedCommunity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(15, 15, 15)
                        .addGroup(jSearchPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblMinAge)
                            .addComponent(lblMaxAge)))
                    .addGroup(jSearchPanelLayout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addComponent(jLabel3)
                        .addGap(71, 71, 71)
                        .addComponent(btnSearchResult)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jSearchPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtPatientMinAge, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtPatientMaxAge, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblPatientAge1))
                .addGap(36, 36, 36)
                .addGroup(jSearchPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblEncounterHistory)
                    .addComponent(txtEncounterHistory, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnEncounterHistory))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 60, Short.MAX_VALUE)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 193, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(25, 25, 25))
        );

        jTablePatientDirectoryData.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Patient ID", "Name", "Age", "Gender", "Contact", "Residence", "Community", "City", "Body Temperature", "Systolic BP", "Diastolic BP", "Heart Rate", "Body Weight", "Date"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTablePatientDirectoryData.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTablePatientDirectoryDataMouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(jTablePatientDirectoryData);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jSearchPanel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(60, 60, 60)
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 1138, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(508, 508, 508)
                        .addComponent(jLabel2)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(33, 33, 33)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 193, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 63, Short.MAX_VALUE)
                .addComponent(jSearchPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jTableSearchOutputMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTableSearchOutputMouseClicked
        // TODO add your handling code here:
        
    }//GEN-LAST:event_jTableSearchOutputMouseClicked

    private void txtPatientMinAgeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtPatientMinAgeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtPatientMinAgeActionPerformed

    private void txtPatientMaxAgeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtPatientMaxAgeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtPatientMaxAgeActionPerformed

    
    private void btnSearchResultActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearchResultActionPerformed
        // TODO add your handling code here:
        String selectedCommunity = comboBoxSelectedCommunity.getSelectedItem().toString();
        int minimum;
        int maximum;
        if (txtPatientMinAge.getText()== null || txtPatientMinAge.getText().trim().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Enter Minimum Range");
            return;
        } else {
            minimum = Integer.parseInt(txtPatientMinAge.getText());
        }
        if (txtPatientMaxAge.getText()== null || txtPatientMaxAge.getText().trim().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Enter Maximum Range");
            return;
        } else {
            maximum = Integer.parseInt(txtPatientMaxAge.getText());
        }
        
        ArrayList<Patient> list = vitalSignHistory.filterByAbnormalPatients(selectedCommunity, minimum, maximum);
        System.out.print(list);
        populateTable(list);
        
        JOptionPane.showMessageDialog(btnSearchResult, "Total Number of Abnormal Patients are " + list.size());
    }//GEN-LAST:event_btnSearchResultActionPerformed

    private void txtEncounterHistoryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtEncounterHistoryActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtEncounterHistoryActionPerformed

    private void btnEncounterHistoryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEncounterHistoryActionPerformed
        // TODO add your handling code here:
        String encounterHistoryPatientId = txtEncounterHistory.getText();
        
        ArrayList<VitalSigns> list = vitalSignHistory.filterByEncounterHistory(encounterHistoryPatientId);
        System.out.print(list);
        populateTableEncounter(list);
        
        JOptionPane.showMessageDialog(btnSearchResult, "Total Number of Encounters are " + list.size());
    }//GEN-LAST:event_btnEncounterHistoryActionPerformed

    private void jTablePatientDirectoryDataMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTablePatientDirectoryDataMouseClicked
        // TODO add your handling code here:
//        row = jTablePatientDirectoryData.getSelectedRow();
//        defaultTableModel = (DefaultTableModel)jTablePatientDirectoryData.getModel();
//
//        txtPatientName.setText(defaultTableModel.getValueAt(row, 1).toString());
//        txtPatientAge.setText(defaultTableModel.getValueAt(row, 2).toString());
//        txtPatientContactNumber.setText(defaultTableModel.getValueAt(row, 4).toString());
    }//GEN-LAST:event_jTablePatientDirectoryDataMouseClicked


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnEncounterHistory;
    private javax.swing.JButton btnSearchResult;
    private javax.swing.JComboBox<String> comboBoxSelectedCommunity;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JPanel jSearchPanel;
    private javax.swing.JTable jTablePatientDirectoryData;
    private javax.swing.JTable jTableSearchOutput;
    private javax.swing.JLabel lblCommunity;
    private javax.swing.JLabel lblEncounterHistory;
    private javax.swing.JLabel lblMaxAge;
    private javax.swing.JLabel lblMinAge;
    private javax.swing.JLabel lblPatientAge1;
    private javax.swing.JTextField txtEncounterHistory;
    private javax.swing.JTextField txtPatientMaxAge;
    private javax.swing.JTextField txtPatientMinAge;
    // End of variables declaration//GEN-END:variables
    
    private void populateTableEncounter(ArrayList<VitalSigns> list) {
        
        DefaultTableModel model = (DefaultTableModel)jTableSearchOutput.getModel();
        model.setRowCount(0);
        
        for(VitalSigns vc: list){
      
            Object[] row = new Object[14];
            row[0]= vc;
            row[1]= vc.getPatientAge();
            row[2]= vc.getPatientGender();
            row[3]= vc.getContactNumber();
            row[4]= vc.getResidence();
            row[5]= vc.getCommunity();
            row[6]= vc.getCity();
            row[7]= vc.getPatientId();
            row[8]= vc.getBodyTemperature();
            row[9]= vc.getBloodPressureSystolic();
            row[10]= vc.getBloodPressureDiastolic();
            row[11]= vc.getHeartRate();
            row[12]=vc.getWeight();
            row[13]= vc.getDate();
            model.addRow(row);

        }
    }
    
    private void populateTable(ArrayList<Patient> list) {
        
        DefaultTableModel model = (DefaultTableModel)jTableSearchOutput.getModel();
        model.setRowCount(0);
        
        for(Patient vc: list) {
      
            Object[] row = new Object[14];
            row[0]= vc;
            row[1]= vc.getPersonAge();
            row[2]= vc.getGender();
            row[3]= vc.getContactNumber();
            row[4]= vc.getHouseAddress();
            row[5]= vc.getCommunityName();
            row[6]= vc.getCityName();
            row[7]= vc.getpatientId();
            row[8]= vc.getBodyTemperature();
            row[9]= vc.getBloodPressureSystolic();
            row[10]= vc.getBloodPressureDiastolic();
            row[11]= vc.getHeartRate();
            row[12]= vc.getWeight();
            row[13]= vc.getDate();

            model.addRow(row);
        }
    }
    
    private void populate() {
    
        defaultTableModel = (DefaultTableModel)jTablePatientDirectoryData.getModel();
        defaultTableModel.setRowCount(0);
   
            
        for(Patient vc : patientDirectory.getPatientDirectoryArrayList()){
            Object[] row = new Object[14];
            row[0]= vc.getpatientId();
            row[1]= vc;
            row[2]= vc.getPersonAge();
            row[3]= vc.getGender();
            row[4]= vc.getContactNumber();
            row[5]= vc.getHouseAddress();
            row[6]= vc.getCommunityName();
            row[7]= vc.getCityName();
            row[8]= vc.getBodyTemperature();
            row[9]= vc.getBloodPressureSystolic();
            row[10]= vc.getBloodPressureDiastolic();
            row[11]= vc.getHeartRate();
            row[12]=vc.getWeight();
            row[13]= vc.getDate();
            defaultTableModel.addRow(row); 
        }  
    }
}

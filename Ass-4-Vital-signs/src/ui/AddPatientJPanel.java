/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package ui;

import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import model.Patient;
import model.PatientDirectory;
import model.Person;
import model.PersonDirectory;
import model.VitalSignHistory;
import model.VitalSigns;
//import org.netbeans.lib.awsextra;

/**
 *
 * @author apurvazawar
 */
public class AddPatientJPanel extends javax.swing.JPanel {

    /**
     * Creates new form AddPatientJPanel
     */  
    int row, column;
    DefaultTableModel defaultTableModel;
    VitalSignHistory vitalSignHistory;
    PersonDirectory personDirectory;
    PatientDirectory patientDirectory;
    Patient patient;
    
    
    public AddPatientJPanel(VitalSignHistory vitalSignHistory,PersonDirectory personDirectory, PatientDirectory patientDirectory) {
        initComponents();
        this.vitalSignHistory = vitalSignHistory;
        this.personDirectory = personDirectory;
        this.patientDirectory = patientDirectory;
//        VitalSigns uc = vitalSignHistory.addNewPatient();
        
//        uc.setPatientName("Apurva");
//        uc.setPatientAge(22);
//        uc.setPatientGender("Female");
//        uc.setContactNumber(1234567890);
//        uc.setResidence("ParkerSt");
//        uc.setCommunity("Roxbury");
//        uc.setCity("Boston");
//        uc.setBodyTemperature(222);
//        uc.setBloodPressureSystolic(222);
//        uc.setBloodPressureDiastolic(222);
//        uc.setHeartRate(222);
//        uc.setWeight(222);
//        uc.setDate("22/01/22");
//        uc.setPatientId(1);
//        
//        VitalSigns uc1 = vitalSignHistory.addNewPatient();
//        uc1.setPatientName("Apurva");
//        uc1.setPatientAge(22);
//        uc1.setPatientGender("Female");
//        uc1.setContactNumber(1234567890);
//        uc1.setResidence("ParkerSt");
//        uc1.setCommunity("Roxbury");
//        uc1.setCity("Boston");
//        uc1.setBodyTemperature(111);
//        uc1.setBloodPressureSystolic(111);
//        uc1.setBloodPressureDiastolic(111);
//        uc1.setHeartRate(111);
//        uc1.setWeight(111);
//        uc1.setDate("22/12/22");
//        uc1.setPatientId(1);
       
        populatePatientTable();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        lblPersonID = new javax.swing.JLabel();
        txtPersonID = new javax.swing.JTextField();
        lblBodyTemperature2 = new javax.swing.JLabel();
        lblBloodPressureSystolic = new javax.swing.JLabel();
        lblHeartRate2 = new javax.swing.JLabel();
        lblBodyWeight2 = new javax.swing.JLabel();
        lblDate2 = new javax.swing.JLabel();
        txtVisitDate = new javax.swing.JTextField();
        txtPatientBodyWeight = new javax.swing.JTextField();
        txtPatientHeartRate = new javax.swing.JTextField();
        txtPatientBloodPressureSystolic = new javax.swing.JTextField();
        txtPatientBodyTemperature = new javax.swing.JTextField();
        btnAddPatient = new javax.swing.JButton();
        lblBloodPressureDiastolic = new javax.swing.JLabel();
        txtPatientBloodPressureDiastolic = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTablePatientDirectoryData = new javax.swing.JTable();

        setBackground(new java.awt.Color(0, 102, 153));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.setBackground(new java.awt.Color(0, 102, 153));
        jPanel1.setToolTipText("");
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        lblPersonID.setFont(new java.awt.Font("Lucida Grande", 0, 14)); // NOI18N
        lblPersonID.setText("Person ID");
        jPanel2.add(lblPersonID, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 40, -1, -1));
        jPanel2.add(txtPersonID, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 30, 150, -1));

        lblBodyTemperature2.setText("Body Temperature");
        jPanel2.add(lblBodyTemperature2, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 140, -1, -1));

        lblBloodPressureSystolic.setText("Blood Pressure Systolic");
        jPanel2.add(lblBloodPressureSystolic, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 180, -1, -1));

        lblHeartRate2.setText("Heart Rate");
        jPanel2.add(lblHeartRate2, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 270, -1, -1));

        lblBodyWeight2.setText("Body Weight");
        jPanel2.add(lblBodyWeight2, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 310, -1, -1));

        lblDate2.setText("Date");
        jPanel2.add(lblDate2, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 350, -1, -1));
        jPanel2.add(txtVisitDate, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 350, 150, -1));
        jPanel2.add(txtPatientBodyWeight, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 310, 150, -1));
        jPanel2.add(txtPatientHeartRate, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 260, 150, -1));
        jPanel2.add(txtPatientBloodPressureSystolic, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 170, 150, -1));
        jPanel2.add(txtPatientBodyTemperature, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 130, 150, -1));

        btnAddPatient.setText("Add Patient");
        btnAddPatient.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddPatientActionPerformed(evt);
            }
        });
        jPanel2.add(btnAddPatient, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 410, -1, -1));

        lblBloodPressureDiastolic.setText("Blood Pressure Diastolic");
        jPanel2.add(lblBloodPressureDiastolic, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 220, -1, -1));

        txtPatientBloodPressureDiastolic.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtPatientBloodPressureDiastolicActionPerformed(evt);
            }
        });
        jPanel2.add(txtPatientBloodPressureDiastolic, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 220, 150, -1));

        jPanel1.add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 60, 560, 460));

        jLabel1.setFont(new java.awt.Font("Lucida Grande", 0, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("ADD PATIENT");
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(480, 20, -1, -1));

        jTablePatientDirectoryData.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Name", "Age", "Gender", "Contact", "Residence", "Community", "City", "Patient Id", "Body Temperature", "Systolic BP", "Diastolic BP", "Heart Rate", "Body Weight", "Date"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(jTablePatientDirectoryData);

        jPanel1.add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 570, 1080, 180));

        add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1120, 800));
    }// </editor-fold>//GEN-END:initComponents

    private void btnAddPatientActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddPatientActionPerformed
        // TODO add your handling code here:
        
        if(txtPersonID.getText().isEmpty()){
            JOptionPane.showMessageDialog(this, "Person Id is empty!");
            return;
        }
        
        int id = Integer.parseInt(txtPersonID.getText());
        double bodyTemperature = Double.parseDouble(txtPatientBodyTemperature.getText());
        double bloodPressureSystolic = Double.parseDouble(txtPatientBloodPressureSystolic.getText());
        double bloodPressureDiastolic = Double.parseDouble(txtPatientBloodPressureDiastolic.getText());
        double heartRate = Double.parseDouble(txtPatientHeartRate.getText());
        double bodyWeight = Double.parseDouble(txtPatientBodyWeight.getText());
        String date = txtVisitDate.getText();
        
        VitalSigns uc = vitalSignHistory.addNewPatient();
        //By ID 
        boolean flag = false;
        for(Person pd : personDirectory.getPersonDirectoryArrayList()) {

            int idCheck = pd.getId();
            System.out.print(personDirectory.getPersonDirectoryArrayList());
            if(id == idCheck) {
                uc.setPatientName(pd.getPersonName());
                uc.setPatientAge(pd.getPersonAge());
                uc.setPatientGender(pd.getGender());
                uc.setContactNumber(pd.getContactNumber());
                uc.setResidence(pd.getHouseAddress());
                uc.setCommunity(pd.getCommunityName());
                uc.setCity(pd.getCityName());
                uc.setPatientId(idCheck);
                uc.setBodyTemperature(bodyTemperature);
                uc.setBloodPressureSystolic(bloodPressureSystolic);
                uc.setBloodPressureDiastolic(bloodPressureDiastolic);
                uc.setHeartRate(heartRate);
                uc.setWeight(bodyWeight);
                uc.setDate(date);
                
                JOptionPane.showMessageDialog(this, "Patient Details Added");
                clearField();
                flag=true;
            }
            populatePatientTable();
        }
        
        if(flag) {
            for(Patient nw : patientDirectory.getPatientDirectoryArrayList()) {
                if (nw.getpatientId() == id) {
                    nw.setBodyTemperature(bodyTemperature);
                    nw.setBloodPressureSystolic(bloodPressureSystolic);
                    nw.setBloodPressureDiastolic(bloodPressureDiastolic);
                    nw.setHeartRate(heartRate);
                    nw.setWeight(bodyWeight);
                    nw.setDate(date);
                }
            }
        }
        
        if(!flag) {
                JOptionPane.showMessageDialog(this, "Record Not Found");
        }
    }//GEN-LAST:event_btnAddPatientActionPerformed

    private void txtPatientBloodPressureDiastolicActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtPatientBloodPressureDiastolicActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtPatientBloodPressureDiastolicActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAddPatient;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTablePatientDirectoryData;
    private javax.swing.JLabel lblBloodPressureDiastolic;
    private javax.swing.JLabel lblBloodPressureSystolic;
    private javax.swing.JLabel lblBodyTemperature2;
    private javax.swing.JLabel lblBodyWeight2;
    private javax.swing.JLabel lblDate2;
    private javax.swing.JLabel lblHeartRate2;
    private javax.swing.JLabel lblPersonID;
    private javax.swing.JTextField txtPatientBloodPressureDiastolic;
    private javax.swing.JTextField txtPatientBloodPressureSystolic;
    private javax.swing.JTextField txtPatientBodyTemperature;
    private javax.swing.JTextField txtPatientBodyWeight;
    private javax.swing.JTextField txtPatientHeartRate;
    private javax.swing.JTextField txtPersonID;
    private javax.swing.JTextField txtVisitDate;
    // End of variables declaration//GEN-END:variables

    private void populatePatientTable() {
        defaultTableModel = (DefaultTableModel)jTablePatientDirectoryData.getModel();
        defaultTableModel.setRowCount(0);
        
           
        for(VitalSigns uc : vitalSignHistory.getVitalSignArrayList()){
            
            Object[] row = new Object[14];
            row[0]= uc;
            row[1]= uc.getPatientAge();
            row[2]= uc.getPatientGender();
            row[3]= uc.getContactNumber();
            row[4]= uc.getResidence();
            row[5]= uc.getCommunity();
            row[6]= uc.getCity();
            row[7]= uc.getPatientId();
            row[8]= uc.getBodyTemperature();
            row[9]= uc.getBloodPressureSystolic();
            row[10]= uc.getBloodPressureDiastolic();
            row[11]= uc.getHeartRate();
            row[12]=uc.getWeight();
            row[13]= uc.getDate();
            defaultTableModel.addRow(row); 
        }  
    }

    private void clearField() {
        txtPersonID.setText("");
        txtPatientBodyTemperature.setText("");
        txtPatientBloodPressureSystolic.setText("");
        txtPatientBloodPressureDiastolic.setText("");
        txtPatientHeartRate.setText("");
        txtPatientBodyWeight.setText("");
        txtVisitDate.setText("");
    }
}
